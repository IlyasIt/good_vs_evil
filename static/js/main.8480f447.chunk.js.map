{"version":3,"sources":["img/VS.png","img/clicking.png","panels/Home.js","panels/Info.js","panels/Intro.js","panels/Loader.js","panels/Rating.js","App.js","index.js","img/icon.png"],"names":["module","exports","Home","props","canvas","useRef","useEffect","context","current","getContext","image","Image","src","globalCounterIcon","onload","drawImage","font","fillStyle","fillText","blueScore","toString","length","redScore","id","transparent","className","icon","alt","header","mode","ref","width","height","onClick","goToPage","before","size","urlParams","require","parse","window","location","search","ordered","Object","keys","sort","forEach","key","slice","bridge","send","vk_app_id","clickButton","clicking","Info","useState","truth","setTruth","textChangeTeam","setTextChangeTeam","colorTeam","left","history","back","selectTeam","open","multiline","Intro","chooseTeam","setChooseTeam","fill","action","style","display","hasSeenIntro","stretched","marginRight","setPopoutSpin","setTimeout","Loader","then","data","value","Rating","marginTop","socket","io","transports","methods","credentials","App","setRedScore","setBlueScore","setColorTeam","color","emit","on","socketd","console","log","red","blue","click","score","connect","userData","last_name","first_name","addEventListener","goBack","scheme","popoutSpin","activePanel","setActivePanel","panel","name","pushState","push","pop","isWebView","popout","onSwipeBack","ReactDOM","render","document","getElementById","subscribe","detail","type"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,mjBC4E5BC,G,MA/DF,SAAAC,GAGZ,IAAMC,EAASC,iBAAO,MAkBtB,OAhBAC,qBAAU,WAET,IAAMC,EAAUH,EAAOI,QAAQC,WAAW,MACpCC,EAAQ,IAAIC,MAClBD,EAAME,IAAMC,IACZH,EAAMI,OAAS,WACdP,EAAQQ,UAAUL,EAAO,EAAG,GAC5BH,EAAQS,KAAO,uBACfT,EAAQU,UAAY,QACpBV,EAAQW,SAASf,EAAMgB,UAAW,IAA0C,GAApChB,EAAMgB,UAAUC,WAAWC,OAAa,KAChFd,EAAQW,SAASf,EAAMmB,SAAU,IAAyC,GAAnCnB,EAAMmB,SAASF,WAAWC,OAAa,QAG7E,CAAClB,EAAMmB,SAAUnB,EAAMgB,YAIzB,kBAAC,IAAD,CAAOI,GAAG,QAET,kBAAC,IAAD,CAAaC,aAAW,GACvB,yBAAKC,UAAU,aAAab,IAAKc,IAAMC,IAAI,MAG5C,kBAAC,IAAD,CAAOC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAa,yBAAKJ,UAAU,cAAf,8BACxC,kBAAC,IAAD,KACC,4BAAQA,UAAU,gBAAgBK,IAAK1B,EAAQ2B,MAAO,IAAKC,OAAQ,QAIrE,kBAAC,IAAD,CAAOJ,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAa,yBAAKJ,UAAU,cAAf,8BAExC,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQQ,QAAS,kBAAM9B,EAAM+B,SAAS,SAAST,UAAU,mBAAmBU,OAAQ,kBAAC,IAAD,MAAyCC,KAAK,KAAKP,KAAK,WAA5I,iEACL,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQI,QAAS,WACrB,IACMI,EADKC,EAAQ,IACEC,MAAMC,OAAOC,SAASC,QACrCC,EAAU,GAChBC,OAAOC,KAAKR,GAAWS,OAAOC,SAAQ,SAACC,GACd,QAApBA,EAAIC,MAAM,EAAG,KAChBN,EAAQK,GAAOX,EAAUW,OAG3BE,IAAOC,KAAK,gBAAiB,CAAE,KAAO,qBAAP,OAA6BR,EAAQS,cAGnE3B,UAAU,mBAAmBU,OAAQ,kBAAC,IAAD,MAAiCC,KAAK,KAAKP,KAAK,WAZlF,iEAaL,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQI,QAAS,kBAAM9B,EAAMkD,eAAe5B,UAAU,kBAAkBW,KAAK,KAAKP,KAAK,WACtF,yBAAKJ,UAAU,WAAWb,IAAK0C,IAAU3B,IAAI,W,oCCapC4B,EAvEF,SAAApD,GAAU,IAAD,EAEQqD,oBAAS,GAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAG0BF,qBAH1B,mBAGXG,EAHW,KAGKC,EAHL,KAKlBtD,qBAAU,WACkB,QAApBH,EAAM0D,WACND,EAAkB,gGAGE,SAApBzD,EAAM0D,WACND,EAAkB,8GAGvB,IAyBH,OACI,kBAAC,IAAD,CAAOrC,GAAG,QACN,kBAAC,IAAD,CAAaC,aAAW,EAACsC,KAAM,kBAAC,IAAD,CAAiB7B,QAAS,kBAAMO,OAAOuB,QAAQC,WAC1E,0BAAMvC,UAAU,cAAhB,iEAEJ,kBAAC,IAAD,KAEI,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQQ,QAAS,iBArBN,QAApB9B,EAAM0D,YACND,EAAkB,4GAClBzD,EAAM8D,WAAW,cAKG,SAApB9D,EAAM0D,YACND,EAAkB,gGAClBzD,EAAM8D,WAAW,UAY6BxC,UAAU,mBAAmBU,OAAQ,kBAAC,IAAD,MAAiCC,KAAK,KAAKP,KAAK,WAAW8B,IAC1I,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQlC,UAAU,mBAAmBQ,QAAS,kBAAMO,OAAO0B,KAAK,8BAA+B,WAAW/B,OAAQ,kBAAC,IAAD,MAAoCC,KAAK,KAAKP,KAAK,WAArK,uGACL,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQI,QAAS,WA7B1ByB,GADU,IAAVD,IA8B2ChC,UAAU,mBAAmBU,OAAQ,kBAAC,IAAD,MAAqCC,KAAK,KAAKP,KAAK,YAA3H,wFAEM,IAAV4B,EAEG,kBAAC,IAAD,CAAO7B,OAAQ,kBAAC,IAAD,CAAQH,UAAU,cAAlB,oHAAqD,6BAArD,+KAA6F,6BAA7F,4KACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,UAAU,aAAa0C,WAAS,GAAtC,y1GACA,kBAAC,IAAD,CAAM1C,UAAU,aAAa0C,WAAS,GAAtC,6VAKL,wC,kBCARC,EA5DD,SAAAjE,GAAU,IAAD,EAEiBqD,oBAAS,GAF1B,mBAEZa,EAFY,KAEAC,EAFA,KAInB,OACI,kBAAC,IAAD,CAAO/C,GAAG,SACN,kBAAC,IAAD,CACIG,KAAM,kBAAC,IAAD,CAAsB6C,KAAK,YACjC3C,OAAO,cACP4C,OAAQ,qCAAkB,IAAfH,EAGX,kBAAC,IAAD,CAAKI,MAAO,CAAEC,QAAS,SACnB,kBAAC,IAAD,CACAzC,QAAS,WACLiB,IAAOC,KAAK,qBAAsB,CAAE,IAAO,eAAgB,MAAS,SACpEhD,EAAMwE,aAAa,QACnBxE,EAAM8D,WAAW,SAEnB7B,KAAK,IAAIX,UAAU,mBAAmBmD,WAAS,EAACH,MAAO,CAAEI,YAAa,IANxE,4CAOA,kBAAC,IAAD,CACA5C,QAAS,WACLiB,IAAOC,KAAK,qBAAsB,CAAE,IAAO,eAAgB,MAAS,SACpEhD,EAAMwE,aAAa,QACnBxE,EAAM8D,WAAW,QAEnB7B,KAAK,IAAIX,UAAU,mBAAmBmD,WAAS,GANjD,+CAaI,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQxC,KAAK,KAAKX,UAAU,mBAC7BQ,QAAS,WACL9B,EAAM2E,cAAc,kBAAC,IAAD,OACpBC,YAAW,WACP5E,EAAM2E,cAAc,MACpBR,GAAc,KACf,OANN,iDAYbM,WAAS,IAEO,IAAfP,EAAuB,oCAAE,6BAAF,yHACpB,oCAAE,6BAAF,6RAA+D,6BAAM,6BAArE,0OAAyH,6BAAM,6BAA/H,iMC7BLW,EArBA,SAAA7E,GAeX,OAbAG,qBAAU,WACN4C,IAAOC,KAAK,qBAAsB,CAAE,KAAQ,CAAC,oBAC5C8B,MAAM,SAAAC,GACwB,SAAvBA,EAAKrC,KAAK,GAAGsC,MACbhF,EAAMwE,aAAa,QAGnBxE,EAAMwE,aAAa,SAEvBxE,EAAM2E,cAAc,WAEzB,IAGC,kBAAC,IAAD,CAAOvD,GAAG,YCMH6D,EAtBA,SAAAjF,GAEd,OACC,kBAAC,IAAD,CAAOoB,GAAG,UACT,kBAAC,IAAD,CAAaC,aAAW,EAACsC,KAAM,kBAAC,IAAD,CAAiB7B,QAAS,kBAAMO,OAAOuB,QAAQC,WAC7E,0BAAMvC,UAAU,cAAhB,+CAED,kBAAC,IAAD,CACCG,OAAQ,kBAAC,IAAD,CAAQC,KAAK,eAErB,kBAAC,IAAD,CAAK4C,MAAO,CAAEC,QAAS,OAAQW,WAAY,KAC1C,kBAAC,IAAD,CAAQ5D,UAAU,aAAaW,KAAK,IAAIwC,WAAS,EAAC/C,KAAK,WAAW4C,MAAO,CAAEI,YAAa,IAAxF,6BACA,kBAAC,IAAD,CAAQpD,UAAU,aAAaW,KAAK,IAAIwC,WAAS,EAAC/C,KAAK,YAAvD,kD,SCNCyD,E,MAASC,GAAG,gCAAiC,CAClDC,WAAY,CAAC,UAAW,aACxBC,QAAS,CAAC,MAAO,QACjBC,aAAa,IAoHCC,EAjHH,WAAO,IAAD,EAEenC,mBAAS,GAFxB,mBAEVlC,EAFU,KAEAsE,EAFA,OAGiBpC,mBAAS,GAH1B,mBAGVrC,EAHU,KAGC0E,EAHD,OAIiBrC,qBAJjB,mBAIVK,EAJU,KAICiC,EAJD,KAMX7B,EAAa,SAAC8B,GACnBT,EAAOU,KAAK,QAAS,CAAE,MAASD,IAChCT,EAAOU,KAAK,QAAS,CAAE,MAAS,SAOjC1F,qBAAU,WACTgF,EAAOU,KAAK,QAAS,CAAE,MAAS,QAChCV,EAAOW,GAAG,SAAS,SAACC,GAAcC,QAAQC,IAAI,QAASF,MACvDZ,EAAOW,GAAG,SAAS,SAACC,GAAkBA,EAAQG,KAAOT,EAAYM,EAAQG,KAAYH,EAAQI,MAAQT,EAAaK,EAAQI,SAC1HhB,EAAOW,GAAG,SAAS,SAACC,GACnBC,QAAQC,IAAIF,GACgB,SAAxBA,EAAQK,MAAMR,QACjBF,EAAaK,EAAQK,MAAMC,OAC3BV,EAAa,QACbR,EAAOU,KAAK,QAAS,CAAE,MAAS,SAGL,QAAxBE,EAAQK,MAAMR,QACjBH,EAAYM,EAAQK,MAAMC,OAC1BV,EAAa,OACbR,EAAOU,KAAK,QAAS,CAAE,MAAS,YAMlC9C,IAAOC,KAAK,uBACV8B,MAAK,SAAAC,GACLI,EAAOW,GAAG,WAAW,SAACC,GACrB,GAAIA,EAAS,CACZ,IACM7D,EADKC,EAAQ,IACEC,MAAMC,OAAOC,SAASC,QACrCC,EAAU,GAOhB,GANAC,OAAOC,KAAKR,GAAWS,OAAOC,SAAQ,SAACC,GACd,QAApBA,EAAIC,MAAM,EAAG,KAChBN,EAAQK,GAAOX,EAAUW,OAIH,YAApBkD,EAAQO,QAAuB,CAClC,IAAMC,EAAW,CAChB,SAAY/D,EACZ,aAAgB,CACf,GAAMuC,EAAK3D,GACX,SAAY2D,EAAKyB,UACjB,UAAazB,EAAK0B,WAClB,KAAO,oBAAP,OAA4B1B,EAAK3D,MAGnC+D,EAAOU,KAAK,QAASU,IAGvBpB,EAAOW,GAAG,cAAc,qBAO3BzD,OAAOqE,iBAAiB,YAAY,kBAAMC,SAExC,IAvEc,MAyEgBtD,mBAAS,cAzEzB,mBAyEVuD,EAzEU,aA0EmBvD,mBAAS,kBAAC,IAAD,QA1E5B,mBA0EVwD,EA1EU,KA0EElC,EA1EF,OA2EqBtB,mBAAS,UA3E9B,mBA2EVyD,EA3EU,KA2EGC,EA3EH,OA4Ea1D,mBAAS,CAAC,SA5EvB,mBA4EVO,EA5EU,KA8EXY,GA9EW,KA8EI,SAACwC,GACrBD,EAAeC,KAGVjF,EAAW,SAACkF,GACjB5E,OAAOuB,QAAQsD,UAAU,CAAEF,MAAOC,GAAQA,GAC1CF,EAAeE,GACfrD,EAAQuD,KAAKF,IAGRN,EAAS,WACS,IAAnB/C,EAAQ1C,OACX6B,IAAOC,KAAK,gBAAiB,CAAE,OAAU,YAC/BY,EAAQ1C,OAAS,IAC3B0C,EAAQwD,MACRL,EAAenD,EAAQA,EAAQ1C,OAAS,MAO1C,OACC,kBAAC,IAAD,CAAgBmG,WAAW,EAAMT,OAAQA,GACxC,kBAAC,IAAD,CAAMU,OAAQT,EAAYC,YAAaA,EAAalD,QAASA,EAAS2D,YAAaZ,GAClF,kBAAC,EAAD,CAAQvF,GAAG,SAASoD,aAAcA,EAAcG,cAAeA,EAAe5C,SAAUA,EAAU4E,OAAQA,IAC1G,kBAAC,EAAD,CAAOvF,GAAG,QAAQuD,cAAeA,EAAeb,WAAYA,EAAYU,aAAcA,EAAczC,SAAUA,EAAU4E,OAAQA,IAChI,kBAAC,EAAD,CAAMvF,GAAG,OAAQJ,UAAWA,EAAWG,SAAUA,EAAUY,SAAUA,EAAUmB,YA9F9D,WACnBiC,EAAOU,KAAK,QAAS,CAAE,MAAS,kBA8F9B,kBAAC,EAAD,CAAQzE,GAAG,SAASW,SAAUA,EAAU4E,OAAQA,IAChD,kBAAC,EAAD,CAAMvF,GAAG,OAAOsC,UAAWA,EAAWI,WAAYA,EAAY/B,SAAUA,EAAU4E,OAAQA,OCjH9F5D,IAAOC,KAAK,gBACZwE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAIjD5E,IAAOC,KAAK,0BAA2B,CAAE,iBAAoB,OAAQ,iBAAoB,UAAW,qBAAwB,YAC5HD,IAAO6E,WAAU,YAAiC,IAAD,IAA7BC,OAA6B,EAAnBC,KAAmB,EAAb/C,OAIjC,K,wCCrBHlF,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.8480f447.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VS.8eb9fd93.png\";","module.exports = __webpack_public_path__ + \"static/media/clicking.e36aaf81.png\";","import React, { useState, useRef, useEffect } from 'react';\nimport { Panel, PanelHeader, Div, Button, Header, Group, SimpleCell, Switch } from '@vkontakte/vkui/';\nimport Icon28StoryQuestionCircleFillViolet from '@vkontakte/icons/dist/28/story_question_circle_fill_violet';\nimport Icon28PollCircleFillGreen from '@vkontakte/icons/dist/28/poll_circle_fill_green';\nimport Icon28StoryFillCircleRed from '@vkontakte/icons/dist/28/story_fill_circle_red';\nimport Icon28UsersCircleFillYellow from '@vkontakte/icons/dist/28/users_circle_fill_yellow';\nimport globalCounterIcon from '../img/VS.png';\nimport clicking from '../img/clicking.png';\nimport icon from '../img/icon.png';\nimport './Style.css';\nimport bridge from '@vkontakte/vk-bridge';\n\n\nconst Home = props => {\n\n\t\n\tconst canvas = useRef(null);\n\n\tuseEffect(() => {\n\n\t\tconst context = canvas.current.getContext(\"2d\");\n\t\tconst image = new Image();\n\t\timage.src = globalCounterIcon;\n\t\timage.onload = () => {\n\t\t\tcontext.drawImage(image, 0, 0);\n\t\t\tcontext.font = \"48px Source Code Pro\";\n\t\t\tcontext.fillStyle = 'white'\n\t\t\tcontext.fillText(props.blueScore, 165 - props.blueScore.toString().length * 13, 170);\n\t\t\tcontext.fillText(props.redScore, 635 - props.redScore.toString().length * 13, 170);\t\t\t\n\t\t};\n\n\t}, [props.redScore, props.blueScore]);\n\n\n\treturn (\n\t\t<Panel id='Home'>\n\n\t\t\t<PanelHeader transparent>\n\t\t\t\t<img className='iconHeader' src={icon} alt=''></img>\n\t\t\t</PanelHeader>\n\n\t\t\t<Group header={<Header mode=\"secondary\" ><div className='customText'>Счет</div></Header>}>\n\t\t\t\t<Div>\n\t\t\t\t\t<canvas className='globalCounter' ref={canvas} width={796} height={313} />\n\t\t\t\t</Div>\n\t\t\t</Group>\n\n\t\t\t<Group header={<Header mode=\"secondary\" ><div className='customText'>Меню</div></Header>}>\n\t\t\t\t{/* <Div><Button onClick={() => props.goToPage('Rating')} className='customButtonInfo' before={<Icon28PollCircleFillGreen />} size=\"xl\" mode=\"outline\">Рейтинг</Button></Div> */}\n\t\t\t\t<Div><Button onClick={() => props.goToPage('Info')} className='customButtonInfo' before={<Icon28StoryQuestionCircleFillViolet />} size=\"xl\" mode=\"outline\">Информация</Button></Div>\n\t\t\t\t<Div><Button onClick={() => {\n\t\t\t\t\tconst qs = require('querystring');\n\t\t\t\t\tconst urlParams = qs.parse(window.location.search);\n\t\t\t\t\tconst ordered = {};\n\t\t\t\t\tObject.keys(urlParams).sort().forEach((key) => {\n\t\t\t\t\t\tif (key.slice(0, 3) === 'vk_') {\n\t\t\t\t\t\t\tordered[key] = urlParams[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbridge.send(\"VKWebAppShare\", { \"link\": `https://vk.com/app${ordered.vk_app_id}` });\n\n\t\t\t\t}\n\t\t\t\t} className='customButtonInfo' before={<Icon28UsersCircleFillYellow />} size=\"xl\" mode=\"outline\">Поделиться</Button></Div>\n\t\t\t\t<Div>\n\t\t\t\t\t<Button onClick={() => props.clickButton()} className='clickButtonMain' size='xl' mode='outline'>\n\t\t\t\t\t\t<img className='clicking' src={clicking} alt=''></img>\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t\t\n\n\t\t\t</Group>\n\t\t</Panel>\n\n\t)\n};\n\nexport default Home;\n\n","import React, { useState, useEffect } from 'react';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Cell, Div, Group, Button, List, Header } from '@vkontakte/vkui/';\r\nimport Icon28MessagesCircleFillYellow from '@vkontakte/icons/dist/28/messages_circle_fill_yellow';\r\nimport Icon28LightbulbCircleFillYellow from '@vkontakte/icons/dist/28/lightbulb_circle_fill_yellow';\r\nimport Icon28UsersCircleFillYellow from '@vkontakte/icons/dist/28/users_circle_fill_yellow';\r\nimport './Style.css';\r\n\r\nconst Info = props => {\r\n\r\n    const [truth, setTruth] = useState(false)\r\n    const [textChangeTeam, setTextChangeTeam] = useState()\r\n\r\n    useEffect(() => {\r\n        if (props.colorTeam === 'red') {\r\n            setTextChangeTeam('Вступить за синих')\r\n        }\r\n\r\n        if (props.colorTeam === 'blue') {\r\n            setTextChangeTeam('Вступить за красных')\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const seeTruth = () => {\r\n        if (truth === false) {\r\n            setTruth(true)\r\n        } else {\r\n            setTruth(false)\r\n        }\r\n    }\r\n    const changeTeam = () => {\r\n        if (props.colorTeam === 'red') {\r\n            setTextChangeTeam('Вступить за красных')\r\n            props.selectTeam('blue')\r\n\r\n\r\n        }\r\n\r\n        if (props.colorTeam === 'blue') {\r\n            setTextChangeTeam('Вступить за синих')\r\n            props.selectTeam('red')\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Panel id='Info'>\r\n            <PanelHeader transparent left={<PanelHeaderBack onClick={() => window.history.back()} />}>\r\n                <span className='customText'>Информация</span>\r\n            </PanelHeader>\r\n            <Group\r\n            >\r\n                <Div><Button onClick={() => changeTeam()} className='customButtonInfo' before={<Icon28UsersCircleFillYellow />} size=\"xl\" mode=\"outline\">{textChangeTeam}</Button></Div>\r\n                <Div><Button className='customButtonInfo' onClick={() => window.open(\"https://vk.me/redvsbluegame\", \"_blank\")} before={<Icon28MessagesCircleFillYellow />} size=\"xl\" mode=\"outline\">Сообщить об ошибке</Button></Div>\r\n                <Div><Button onClick={()=> seeTruth()} className='customButtonInfo' before={<Icon28LightbulbCircleFillYellow />} size=\"xl\" mode='tertiary' >В чем смысл игры?</Button></Div>\r\n              \r\n                {truth === true ? (\r\n                \r\n                    <Group header={<Header className='customText'>«Разделяй и властвуй» <br /> © Филипп Македонский — греческий <br /> военный и политический деятель.</Header>}>\r\n                        <List>\r\n                            <Cell className='customText' multiline>Казалось бы, перед вами простое мини-приложение. Но в эту игру вложен намного больший смысл, чем просто «клацание» по кнопке. Вся суть данного приложения, это провести маленькую парралель с нынешним устройством мира. Мы не просто так разделили Вас на красных и синих, придумав вымышленный конфликт. Этим мы хотели показать, что на Земле нету белых/черных, мусульман/немусульман, богатых/нищих. Все войны и конфликты возникают лишь в угоду «мировой верхушки», которая натравливает целые народы против друг-друга, ради своей выгоды (всего лишь разделив их по определенному признаку). А обычный люд не видя всего этого, слепо следует указаниям этих правителей и погибает.   </Cell>\r\n                            <Cell className='customText' multiline>Надеемся, что этим маленьким примером, мы внесли ясность в Ваши умы.</Cell>\r\n                        </List>\r\n                    </Group>\r\n\r\n                ) : (\r\n                       <></>\r\n                    )}\r\n                    \r\n                    \r\n            </Group>\r\n\r\n        </Panel>\r\n    )\r\n};\r\n\r\n\r\nexport default Info;\r\n","import React, {useState} from 'react';\r\nimport { Panel, PanelHeader, Placeholder, Button, Div, ScreenSpinner, Header } from '@vkontakte/vkui/';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport './Style.css';\r\nimport Icon56DiamondOutline from '@vkontakte/icons/dist/56/diamond_outline';\r\nimport icon from '../img/icon.png';\r\n\r\nconst Intro = props => {\r\n\r\n    const [chooseTeam, setChooseTeam] = useState(false)\r\n\r\n    return (\r\n        <Panel id='Intro'>\r\n            <Placeholder\r\n                icon={<Icon56DiamondOutline fill=\"#00f2fe\"/>}\r\n                header='Red VS Blue'\r\n                action={<>{chooseTeam === true ? (\r\n                \r\n                \r\n                <Div style={{ display: 'flex' }}>\r\n                    <Button \r\n                    onClick={() => {\r\n                        bridge.send(\"VKWebAppStorageSet\", { \"key\": \"hasSeenIntro\", \"value\": 'true' });\r\n                        props.hasSeenIntro('Home')\r\n                        props.selectTeam('blue')\r\n                        }\r\n                    } size=\"l\" className='customButtonInfo' stretched style={{ marginRight: 8 }}>&nbsp; Синие &nbsp;</Button>\r\n                    <Button \r\n                    onClick={() => {\r\n                        bridge.send(\"VKWebAppStorageSet\", { \"key\": \"hasSeenIntro\", \"value\": 'true' });\r\n                        props.hasSeenIntro('Home')\r\n                        props.selectTeam('red')\r\n                        }\r\n                    } size=\"l\" className='customButtonInfo' stretched>Красные</Button>\r\n                </Div>\r\n                \r\n                \r\n                \r\n                \r\n                ) : (\r\n                        <Div><Button size='xl' className='customButtonInfo'\r\n                            onClick={() => {\r\n                                props.setPopoutSpin(<ScreenSpinner />)\r\n                                setTimeout(() => {\r\n                                    props.setPopoutSpin(null)\r\n                                    setChooseTeam(true)\r\n                                }, 500);\r\n                            }\r\n                            }\r\n                        >Поехали!</Button> \r\n                        </Div>\r\n                    )}</>}\r\n                stretched\r\n            >\r\n                {chooseTeam === true ? (<><br />Выберите цвет команды:</>) : (\r\n                    <><br />Добро пожаловать в противостояние «Синих» и «Красных»! <br /><br /> Кликай, чтобы привести свою команду к Победе!<br /><br /> Победители определятся в конце дня!</>\r\n                    )}\r\n          </Placeholder>\r\n          \r\n            \r\n           \r\n        </Panel>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Intro;\r\n","import React, {useEffect} from 'react';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Button, Div, Group, Header } from '@vkontakte/vkui/';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport './Style.css';\r\n\r\nconst Loader = props => {\r\n\r\n    useEffect(() => {\r\n        bridge.send(\"VKWebAppStorageGet\", { \"keys\": ['hasSeenIntro22'] })\r\n        .then( data => {\r\n            if (data.keys[0].value === 'true') {\r\n                props.hasSeenIntro('Home')\r\n            }\r\n            else {\r\n                props.hasSeenIntro('Intro')\r\n            }\r\n            props.setPopoutSpin(null)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id='Loader'></Panel>\r\n    )\r\n};\r\n\r\n\r\nexport default Loader;\r\n","import React from 'react';\nimport { Panel, PanelHeader, PanelHeaderBack, Button, Div, Group, Header} from '@vkontakte/vkui/';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport './Style.css';\n\nconst Rating = props => {\n\n\treturn (\n\t\t<Panel id='Rating'>\n\t\t\t<PanelHeader transparent left={<PanelHeaderBack onClick={() => window.history.back()} />}>\n\t\t\t\t<span className='customText'>Рейтинг</span>\n\t\t\t</PanelHeader>\n\t\t\t<Group\n\t\t\t\theader={<Header mode=\"secondary\"></Header>}\n\t\t\t>\n\t\t\t\t<Div style={{ display: 'flex', marginTop: -30 }}>\n\t\t\t\t\t<Button className='customText' size=\"l\" stretched mode=\"tertiary\" style={{ marginRight: 8 }}>Cиние</Button>\n\t\t\t\t\t<Button className='customText' size=\"l\" stretched mode=\"tertiary\">Красные</Button>\n\t\t\t\t</Div>\n\n\t\t\t</Group>\n\t\t</Panel>\n\n\t)\n};\n\n\nexport default Rating;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner } from '@vkontakte/vkui/';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home'\nimport Info from './panels/Info'\nimport Intro from './panels/Intro'\nimport Loader from './panels/Loader'\nimport Rating from './panels/Rating'\nimport io from 'socket.io-client';\nconst socket = io(\"https://83.220.173.46/message\", {\n\ttransports: ['polling', 'websocket'],\n\tmethods: [\"GET\", \"POST\"],\n\tcredentials: true\n});\n\nconst App = () => {\n\n\tconst [redScore, setRedScore] = useState(0)\n\tconst [blueScore, setBlueScore] = useState(0)\n\tconst [colorTeam, setColorTeam] = useState()\n\n\tconst selectTeam = (color) => {\n\t\tsocket.emit('color', { \"color\": color });\n\t\tsocket.emit('score', { \"score\": \"all\" });\n\t}\n\n\tconst clickButton = () => {\n\t\tsocket.emit('click', { \"click\": \"coordenate\" });\n\t}\n\n\tuseEffect(() => {\n\t\tsocket.emit('score', { \"score\": \"all\" });\n\t\tsocket.on(\"color\", (socketd) => { console.log(\"color\", socketd) });\n\t\tsocket.on(\"score\", (socketd) => { if (socketd.red) { setRedScore(socketd.red) }; if (socketd.blue) { setBlueScore(socketd.blue)}});\n\t\tsocket.on(\"click\", (socketd) => {\n\t\t\tconsole.log(socketd);\n\t\t\tif (socketd.click.color === 'blue') {\n\t\t\t\tsetBlueScore(socketd.click.score)\n\t\t\t\tsetColorTeam('blue')\n\t\t\t\tsocket.emit('score', { \"score\": \"all\" });\n\n\t\t\t}\n\t\t\tif (socketd.click.color === 'red') {\n\t\t\t\tsetRedScore(socketd.click.score)\n\t\t\t\tsetColorTeam('red')\n\t\t\t\tsocket.emit('score', { \"score\": \"all\" });\n\n\t\t\t}\n\t\t});\n\t\t\n\n\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t.then(data => {\n\t\t\t\tsocket.on(\"connect\", (socketd) => {\n\t\t\t\t\tif (socketd) {\n\t\t\t\t\t\tconst qs = require('querystring');\n\t\t\t\t\t\tconst urlParams = qs.parse(window.location.search);\n\t\t\t\t\t\tconst ordered = {};\n\t\t\t\t\t\tObject.keys(urlParams).sort().forEach((key) => {\n\t\t\t\t\t\t\tif (key.slice(0, 3) === 'vk_') {\n\t\t\t\t\t\t\t\tordered[key] = urlParams[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (socketd.connect === 'connect') {\n\t\t\t\t\t\t\tconst userData = {\n\t\t\t\t\t\t\t\t'validate': ordered,\n\t\t\t\t\t\t\t\t'user_profile': {\n\t\t\t\t\t\t\t\t\t'id': data.id,\n\t\t\t\t\t\t\t\t\t'lastname': data.last_name,\n\t\t\t\t\t\t\t\t\t'firstname': data.first_name,\n\t\t\t\t\t\t\t\t\t'link': `https://vk.com/id${data.id}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsocket.emit(\"enter\", userData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsocket.on('disconnect', () => { })\n\t\t\t\t});\n\n\t\t\t})\n\n\n\n\t\twindow.addEventListener('popstate', () => goBack());\n\n\t}, []);\n\n\tconst [scheme, SetStateScheme] = useState('space_gray');\n\tconst [popoutSpin, setPopoutSpin] = useState(<ScreenSpinner />)\n\tconst [activePanel, setActivePanel] = useState(\"Loader\");\n\tconst [history, setHistory] = useState(['Home'])\n\n\tconst hasSeenIntro = (panel) => {\n\t\tsetActivePanel(panel)\n\t}\n\n\tconst goToPage = (name) => {\n\t\twindow.history.pushState({ panel: name }, name);\n\t\tsetActivePanel(name);\n\t\thistory.push(name);\n\t};\n\n\tconst goBack = () => {\n\t\tif (history.length === 1) {\n\t\t\tbridge.send(\"VKWebAppClose\", { \"status\": \"success\" });\n\t\t} else if (history.length > 1) {\n\t\t\thistory.pop()\n\t\t\tsetActivePanel(history[history.length - 1])\n\t\t}\n\t}\n\n\n\n\n\treturn (\n\t\t<ConfigProvider isWebView={true} scheme={scheme}>\n\t\t\t<View popout={popoutSpin} activePanel={activePanel} history={history} onSwipeBack={goBack}>\n\t\t\t\t<Loader id=\"Loader\" hasSeenIntro={hasSeenIntro} setPopoutSpin={setPopoutSpin} goToPage={goToPage} goBack={goBack} />\n\t\t\t\t<Intro id=\"Intro\" setPopoutSpin={setPopoutSpin} selectTeam={selectTeam} hasSeenIntro={hasSeenIntro} goToPage={goToPage} goBack={goBack} />\n\t\t\t\t<Home id=\"Home\"  blueScore={blueScore} redScore={redScore} goToPage={goToPage} clickButton={clickButton} />\n\t\t\t\t<Rating id=\"Rating\" goToPage={goToPage} goBack={goBack} />\n\t\t\t\t<Info id=\"Info\" colorTeam={colorTeam} selectTeam={selectTeam} goToPage={goToPage} goBack={goBack} />\n\t\t\t</View>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\n\n\n\nbridge.send(\"VKWebAppInit\");\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => { }); //runtime download\n}\nbridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#009ffd\", 'navigation_bar_color': \"#464ab8\" });\nbridge.subscribe(({ detail: { type, data } }) => {\n  if (type === 'VKWebAppUpdateConfig') {\n  \n  }\n}, []);\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/icon.e4bd95a5.png\";"],"sourceRoot":""}