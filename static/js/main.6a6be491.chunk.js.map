{"version":3,"sources":["img/VS.png","panels/Home.js","panels/Info.js","panels/Intro.js","panels/Loader.js","panels/Rating.js","panels/Finish.js","App.js","index.js","img/icon.png","img/clicking.png"],"names":["module","exports","Home","props","canvas","useRef","useState","web","setWeb","useEffect","bridge","send","then","data","platform","context","current","getContext","image","Image","src","globalCounterIcon","onload","drawImage","font","fillStyle","fillText","blueScore","toString","length","redScore","id","transparent","className","icon","alt","header","mode","ref","width","height","onClick","goToPage","before","size","urlParams","require","parse","window","location","search","ordered","Object","keys","sort","forEach","key","slice","vk_app_id","clickButton","clicking","Info","truth","setTruth","setTextChangeTeam","colorTeam","left","history","back","open","multiline","Intro","chooseTeam","setChooseTeam","fill","action","style","display","hasSeenIntro","selectTeam","stretched","marginRight","setPopoutSpin","setTimeout","Loader","value","Rating","setSelectTeam","selectTeamRating","team","console","log","yourStat","blueTeam","redTeam","statistic","marginTop","disabled","textAlign","map","user","after","link","firstname","lastname","Finish","socket","socketIO","transports","jsonp","methods","credentials","App","setRedScore","setBlueScore","setBlueTeam","setRedTeam","setYourStat","color","emit","on","socketd","userData","last_name","first_name","connect","you_statistic","blue","red","click","addEventListener","goBack","scheme","popoutSpin","activePanel","setActivePanel","panel","name","pushState","push","pop","isWebView","popout","onSwipeBack","ReactDOM","render","document","getElementById","subscribe","detail","type"],"mappings":"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","file":"static/js/main.6a6be491.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VS.3969a829.png\";","import React, { useState, useRef, useEffect } from 'react';\nimport { Panel, PanelHeader, Div, Button, Header, Group, SimpleCell, Switch } from '@vkontakte/vkui/';\nimport Icon28StoryQuestionCircleFillViolet from '@vkontakte/icons/dist/28/story_question_circle_fill_violet';\nimport Icon28PollCircleFillGreen from '@vkontakte/icons/dist/28/poll_circle_fill_green';\nimport Icon28StoryFillCircleRed from '@vkontakte/icons/dist/28/story_fill_circle_red';\nimport Icon28UsersCircleFillYellow from '@vkontakte/icons/dist/28/users_circle_fill_yellow';\nimport globalCounterIcon from '../img/VS.png';\nimport clicking from '../img/clicking.png';\nimport icon from '../img/icon.png';\nimport './Style.css';\nimport bridge from '@vkontakte/vk-bridge';\n\n\nconst Home = props => {\n\n\t\n\tconst canvas = useRef(null);\n\tconst [web, setWeb] = useState(false)\n\n\tuseEffect(() => {\n\n\t\tbridge.send(\"VKWebAppGetClientVersion\")\n\t\t.then(data => {\n\t\t\tif (data.platform === 'web') {\n\t\t\t\tsetWeb(true)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetWeb(false)\n\t\t\t}\n\t\t\n\t\t})\n\n\t\tconst context = canvas.current.getContext(\"2d\");\n\t\tconst image = new Image();\n\t\timage.src = globalCounterIcon;\n\t\timage.onload = () => {\n\t\t\tcontext.drawImage(image, 0, 0);\n\t\t\tcontext.font = \"48px Source Code Pro\";\n\t\t\tcontext.fillStyle = 'white'\n\t\t\tcontext.fillText(props.blueScore, 165 - props.blueScore.toString().length * 13, 170);\n\t\t\tcontext.fillText(props.redScore, 635 - props.redScore.toString().length * 13, 170);\t\t\t\n\t\t};\n\n\t}, [props.redScore, props.blueScore]);\n\n\n\treturn (\n\t\t<Panel id='Home'>\n\n\t\t\t<PanelHeader transparent>\n\t\t\t\t<img className='iconHeader' src={icon} alt=''></img>\n\t\t\t</PanelHeader>\n\n\t\t\t<Group header={<Header mode=\"secondary\" ><div className='customText'>Счет</div></Header>}>\n\t\t\t\t<Div>\n\t\t\t\t\t<canvas className='globalCounter' ref={canvas} width={796} height={313} />\n\t\t\t\t</Div>\n\t\t\t</Group>\n\n\t\t\t<Group header={<Header mode=\"secondary\" ><div className='customText'>Меню</div></Header>}>\n\t\t\t\t{web === false ? (<>\n\t\t\t\t\t<Div><Button onClick={() => props.goToPage('Info')} className='customButtonInfo' before={<Icon28StoryQuestionCircleFillViolet />} size=\"xl\" mode=\"outline\">О приложении</Button></Div>\n\t\t\t\t\t<Div><Button onClick={() => props.goToPage('Rating')} className='customButtonInfo' before={<Icon28PollCircleFillGreen />} size=\"xl\" mode=\"outline\">Глобальный рейтинг</Button></Div>\n\t\t\t\t\t<Div><Button onClick={() => {\n\t\t\t\t\t\tconst qs = require('querystring');\n\t\t\t\t\t\tconst urlParams = qs.parse(window.location.search);\n\t\t\t\t\t\tconst ordered = {};\n\t\t\t\t\t\tObject.keys(urlParams).sort().forEach((key) => {\n\t\t\t\t\t\t\tif (key.slice(0, 3) === 'vk_') {\n\t\t\t\t\t\t\t\tordered[key] = urlParams[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbridge.send(\"VKWebAppShare\", { \"link\": `https://vk.com/app${ordered.vk_app_id}` });\n\n\t\t\t\t\t}\n\t\t\t\t\t} className='customButtonInfo' before={<Icon28UsersCircleFillYellow />} size=\"xl\" mode=\"outline\">Поделиться c друзьями</Button></Div>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Button onClick={() => props.clickButton()} className='clickButtonMain' size='xl' mode='outline'>\n\t\t\t\t\t\t\t<img className='clicking' src={clicking} alt=''></img>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Div>\n\n\t\t\t\t</>) : (<>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button onClick={() => props.clickButton()} className='clickButtonMain' size='xl' mode='outline'>\n\t\t\t\t\t\t\t\t<img className='clickingWeb' src={clicking} alt=''></img>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t<Div><Button onClick={() => props.goToPage('Info')} className='customButtonInfo' before={<Icon28StoryQuestionCircleFillViolet />} size=\"xl\" mode=\"outline\">О приложении</Button></Div>\n\n\t\t\t\t\t\t<Div><Button onClick={() => props.goToPage('Rating')} className='customButtonInfo' before={<Icon28PollCircleFillGreen />} size=\"xl\" mode=\"outline\">Глобальный рейтинг</Button></Div>\n\t\t\t\t\t\t<Div><Button onClick={() => {\n\t\t\t\t\t\t\tconst qs = require('querystring');\n\t\t\t\t\t\t\tconst urlParams = qs.parse(window.location.search);\n\t\t\t\t\t\t\tconst ordered = {};\n\t\t\t\t\t\t\tObject.keys(urlParams).sort().forEach((key) => {\n\t\t\t\t\t\t\t\tif (key.slice(0, 3) === 'vk_') {\n\t\t\t\t\t\t\t\t\tordered[key] = urlParams[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbridge.send(\"VKWebAppShare\", { \"link\": `https://vk.com/app${ordered.vk_app_id}` });\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} className='customButtonInfo' before={<Icon28UsersCircleFillYellow />} size=\"xl\" mode=\"outline\">Поделиться c друзьями</Button></Div>\n\t\t\t\t\t\t\n\n\t\t\t\t</>)}\n\t\t\t\t\n\n\t\t\t</Group>\n\t\t</Panel>\n\n\t)\n};\n\nexport default Home;\n\n","import React, { useState, useEffect } from 'react';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Cell, Div, Group, Button, List, Header } from '@vkontakte/vkui/';\r\nimport Icon28MessagesCircleFillYellow from '@vkontakte/icons/dist/28/messages_circle_fill_yellow';\r\nimport Icon28LightbulbCircleFillYellow from '@vkontakte/icons/dist/28/lightbulb_circle_fill_yellow';\r\nimport Icon28UsersCircleFillYellow from '@vkontakte/icons/dist/28/users_circle_fill_yellow';\r\nimport Icon28FavoriteCircleFillYellow from '@vkontakte/icons/dist/28/favorite_circle_fill_yellow';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport './Style.css';\r\n\r\nconst Info = props => {\r\n\r\n    const [truth, setTruth] = useState(false)\r\n    const [textChangeTeam, setTextChangeTeam] = useState()\r\n\r\n    useEffect(() => {\r\n        if (props.colorTeam === 'red') {\r\n            setTextChangeTeam('Вступить за синих')\r\n        }\r\n\r\n        if (props.colorTeam === 'blue') {\r\n            setTextChangeTeam('Вступить за красных')\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const seeTruth = () => {\r\n        if (truth === false) {\r\n            setTruth(true)\r\n        } else {\r\n            setTruth(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Panel id='Info'>\r\n            <PanelHeader transparent left={<PanelHeaderBack onClick={() => window.history.back()} />}>\r\n                <span className='customText'>Информация</span>\r\n            </PanelHeader>\r\n            <Group\r\n            >\r\n                <Div><Button className='customButtonInfo' onClick={() => bridge.send(\"VKWebAppAddToFavorites\")} before={<Icon28FavoriteCircleFillYellow />} size=\"xl\" mode=\"outline\">Добавить в избранное</Button></Div>\r\n\r\n                <Div><Button className='customButtonInfo' onClick={() => window.open(\"https://vk.me/redvsbluegame\", \"_blank\")} before={<Icon28MessagesCircleFillYellow />} size=\"xl\" mode=\"outline\">Сообщить об ошибке</Button></Div>\r\n                <Div><Button className='customButtonInfo' onClick={() => window.open(\"https://vk.com/redvsbluegame\", \"_blank\")} before={<Icon28UsersCircleFillYellow />} size=\"xl\" mode=\"outline\">Официальная группа</Button></Div>\r\n                <Div><Button onClick={()=> seeTruth()} className='customButtonInfo' before={<Icon28LightbulbCircleFillYellow />} size=\"xl\" mode='tertiary' >В чем смысл игры?</Button></Div>\r\n              \r\n                {truth === true ? (\r\n                \r\n                    <Group header={<Header className='customText'>«Разделяй и властвуй» <br /> © Филипп Македонский — греческий <br /> военный и политический деятель.</Header>}>\r\n                        <List>\r\n                            <Cell className='customText' multiline>Казалось бы, перед вами простое мини-приложение. Но в эту игру вложен намного больший смысл, чем просто «клацание» по кнопке. Вся суть данного приложения, это провести маленькую парралель с нынешним устройством мира. Мы не просто так разделили Вас на красных и синих, придумав вымышленный конфликт. Этим мы хотели показать, что на Земле нету белых/черных, мусульман/христиан, богатых/нищих. Все войны и конфликты возникают лишь в угоду «мировой верхушки», которая натравливает целые народы против друг-друга, ради своей выгоды (всего лишь разделив их по определенному признаку). А обычный люд не видя всего этого, слепо следует указаниям этих правителей и погибает.   </Cell>\r\n                            <Cell className='customText' multiline>Надеемся, что этим маленьким примером, мы внесли ясность в Ваши умы.</Cell>\r\n                        </List>\r\n                    </Group>\r\n\r\n                ) : (\r\n                       <></>\r\n                    )}\r\n                    \r\n                    \r\n            </Group>\r\n\r\n        </Panel>\r\n    )\r\n};\r\n\r\n\r\nexport default Info;\r\n","import React, {useState} from 'react';\r\nimport { Panel, PanelHeader, Placeholder, Button, Div, ScreenSpinner, Header } from '@vkontakte/vkui/';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport './Style.css';\r\nimport Icon56DiamondOutline from '@vkontakte/icons/dist/56/diamond_outline';\r\nimport icon from '../img/icon.png';\r\n\r\nconst Intro = props => {\r\n\r\n    const [chooseTeam, setChooseTeam] = useState(false)\r\n\r\n    return (\r\n        <Panel id='Intro'>\r\n            <Placeholder\r\n                icon={<Icon56DiamondOutline fill=\"#00f2fe\"/>}\r\n                header='Red VS Blue'\r\n                action={<>{chooseTeam === true ? (\r\n                \r\n                \r\n                <Div style={{ display: 'flex' }}>\r\n                    <Button \r\n                    onClick={() => {\r\n                                bridge.send(\"VKWebAppStorageSet\", { \"key\": \"hasSeenIntro1111\", \"value\": 'true' });\r\n                        props.hasSeenIntro('Home')\r\n                        props.selectTeam('blue')\r\n                        }\r\n                    } size=\"l\" className='customButtonInfo' stretched style={{ marginRight: 8 }}>&nbsp; Синие &nbsp;</Button>\r\n                    <Button \r\n                    onClick={() => {\r\n                                bridge.send(\"VKWebAppStorageSet\", { \"key\": \"hasSeenIntro1111\", \"value\": 'true' });\r\n                        props.hasSeenIntro('Home')\r\n                        props.selectTeam('red')\r\n                        }\r\n                    } size=\"l\" className='customButtonInfo' stretched>Красные</Button>\r\n                </Div>\r\n                \r\n                \r\n                \r\n                \r\n                ) : (\r\n                        <Div><Button size='xl' className='customButtonInfo'\r\n                            onClick={() => {\r\n                                props.setPopoutSpin(<ScreenSpinner />)\r\n                                setTimeout(() => {\r\n                                    props.setPopoutSpin(null)\r\n                                    setChooseTeam(true)\r\n                                }, 500);\r\n                            }\r\n                            }\r\n                        >Поехали!</Button> \r\n                        </Div>\r\n                    )}</>}\r\n                stretched\r\n            >\r\n                {chooseTeam === true ? (<><br />Выберите цвет команды:</>) : (\r\n                    <><br />Добро пожаловать в противостояние «Синих» и «Красных»! <br /><br /> Кликай, чтобы привести свою команду к Победе!<br /><br /> Победители определятся в конце дня!</>\r\n                    )}\r\n          </Placeholder>\r\n          \r\n            \r\n           \r\n        </Panel>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Intro;\r\n","import React, { useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Panel } from '@vkontakte/vkui/';\r\nimport './Style.css';\r\n\r\nconst Loader = props => {\r\n\r\n    useEffect(() => {\r\n        bridge.send(\"VKWebAppStorageGet\", { \"keys\": ['hasSeenIntro1111'] })\r\n        .then( data => {\r\n            if (data.keys[0].value === 'true') {\r\n                props.hasSeenIntro('Home')\r\n            }\r\n            else {\r\n                props.hasSeenIntro('Intro')\r\n            }\r\n            props.setPopoutSpin(null)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id='Loader'></Panel>\r\n    )\r\n};\r\n\r\n\r\nexport default Loader;\r\n","import React, {useState, useEffect} from 'react';\nimport { Panel, PanelHeader, PanelHeaderBack, Button, Div, Group, Header, RichCell, List, Cell} from '@vkontakte/vkui/';\nimport './Style.css';\n\nconst Rating = props => {\n\n\tconst [selectTeam, setSelectTeam] = useState(true)\n\n\n\tconst selectTeamRating = (team) => {\n\t\tif (team === 'blue') {\n\t\t\tsetSelectTeam(true)\n\t\t}\n\t\tif (team === 'red') {\n\t\t\tsetSelectTeam(false)\n\t\t}\n\n\t}\n\n\tuseEffect(() => {\n\t\n\t\tconsole.log(props.yourStat);\n\t\tconsole.log(props.blueTeam);\n\t\tconsole.log(props.redTeam);\t\n\t\tprops.statistic()\n\t\t\n\n\t}, []);\n\n\n\treturn (\n\t\t<Panel id='Rating'>\n\t\t\t<PanelHeader transparent left={<PanelHeaderBack onClick={() => window.history.back()} />}>\n\t\t\t\t<span className='customText'>Рейтинг</span>\n\t\t\t</PanelHeader>\n\t\t\t<Group\n\t\t\t\theader={<Header mode=\"secondary\"></Header>}\n\t\t\t>\n\t\t\t\t<Div style={{ display: 'flex', marginTop: -30 }}>\n\t\t\t\t\t{selectTeam === true ? (<>\n\t\t\t\t\t\t<Button disabled onClick={() => selectTeamRating('blue')} className='customText' size=\"l\" stretched mode=\"tertiary\" style={{ marginRight: 8 }}>Cиние — {props.blueTeam.length}</Button>\n\t\t\t\t\t\t<Button onClick={() => selectTeamRating('red')} className='customText' size=\"l\" stretched mode=\"tertiary\">Красные — {props.redTeam.length}</Button>\n\t\t\t\t\t</>) : (<>\n\t\t\t\t\t\t\t<Button onClick={() => selectTeamRating('blue')} className='customText' size=\"l\" stretched mode=\"tertiary\" style={{ marginRight: 8 }}>Cиние — {props.blueTeam.length}</Button>\n\t\t\t\t\t\t\t<Button disabled onClick={() => selectTeamRating('red')} className='customText' size=\"l\" stretched mode=\"tertiary\">Красные — {props.redTeam.length}</Button>\n\t\t\t\t\t</>)}\n\n\t\t\t\t\t\n\n\t\t\t\t</Div>\n\t\t\t\t{props.yourStat != '' ? (<>\n\t\t\t\t<List>\n\t\t\t\t\t\t<Cell className='customText' style={{ textAlign: 'center' }} multiline>Ваш рейтинг — {props.yourStat}</Cell>\n\t\t\t\t</List> </>) : (<></>)}\n\t\t\t\t\n\n\t\t\t\t{selectTeam === true ? ( <>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t{props.blueTeam.length === 0 ? (<>\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t<Cell className='customText' style={{textAlign: 'center'}} multiline>Нету данных для отображения.</Cell>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</>) : (props.blueTeam.map(user => {\n\t\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\t\t\tclassName='customText'\n\t\t\t\t\t\t\t\t\tafter={user[1]}\n\t\t\t\t\t\t\t\t\tonClick={() => window.open(user[0].link, \"_blank\")}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{user[0].firstname} {user[0].lastname}\n\t\t\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t</>) : (<>\n\n\n\t\t\t\t\t{props.redTeam.length === 0 ? (<>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t<Cell className='customText' style={{ textAlign: 'center' }} multiline>Нету данных для отображения.</Cell>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</>) : (props.redTeam.map(user => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\t\tclassName='customText'\n\t\t\t\t\t\t\t\tafter={user[1]}\n\t\t\t\t\t\t\t\tonClick={() => window.open(user[0].link, \"_blank\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{user[0].firstname} {user[0].lastname}\n\t\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t</>)}\n\n\t\t\t</Group>\n\t\t</Panel>\n\n\t)\n};\n\n\nexport default Rating;\n","import React, { useState } from 'react';\r\nimport { Panel, PanelHeader, Placeholder, Button, Div, ScreenSpinner, Header } from '@vkontakte/vkui/';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport './Style.css';\r\nimport Icon56DiamondOutline from '@vkontakte/icons/dist/56/diamond_outline';\r\nimport icon from '../img/icon.png';\r\n\r\nconst Finish = props => {\r\n\r\n\r\n    return (\r\n        <Panel id='Intro'>\r\n            <Placeholder\r\n                icon={<Icon56DiamondOutline fill=\"#00f2fe\" />}\r\n                header='Red VS Blue'\r\n                action={<Div style={{ display: 'flex' }}>\r\n                    <Button\r\n                        onClick={() => {\r\n                            props.hasSeenIntro('Home')\r\n                            props.selectTeam('blue')\r\n                        }\r\n                        } size=\"l\" className='customButtonInfo' stretched style={{ marginRight: 8 }}>&nbsp; Синие &nbsp;</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            props.hasSeenIntro('Home')\r\n                            props.selectTeam('red')\r\n                        }\r\n                        } size=\"l\" className='customButtonInfo' stretched>Красные</Button>\r\n                </Div>}\r\n                stretched\r\n            >\r\n                Выберите цвет команды:\r\n            </Placeholder>\r\n\r\n\r\n\r\n        </Panel>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Finish;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner } from '@vkontakte/vkui/';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home'\nimport Info from './panels/Info'\nimport Intro from './panels/Intro'\nimport Loader from './panels/Loader'\nimport Rating from './panels/Rating'\nimport Finish from './panels/Finish'\n\nimport socketIO from 'socket.io-client';\n\nconst socket = socketIO(\"https://83.220.173.46/message\", {\n\ttransports: ['polling'], jsonp: false,\n\tmethods: [\"GET\", \"POST\"],\n\tcredentials: true\n});\n\nconst App = () => {\n\n\tconst [redScore, setRedScore] = useState(0)\n\tconst [blueScore, setBlueScore] = useState(0)\n\tconst [blueTeam, setBlueTeam] = useState()\n\tconst [redTeam, setRedTeam] = useState()\n\tconst [yourStat, setYourStat] = useState()\n\n\tconst selectTeam = (color) => {\n\t\tsocket.emit('color', { \"color\": color });\n\t\tsocket.emit('score', { \"score\": \"all\" });\n\t}\n\n\tconst clickButton = () => {\n\t\tsocket.emit('statistic', { \"statistic\": \"all\" });\n\n\t\tsocket.emit('click', { \"click\": \"coordenate\" });\n\t\tsocket.emit('score', { \"score\": \"all\" });\n\t}\n\n\tconst statistic = () => { }\n\t\n\tuseEffect(() => {\n\n\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t.then(data => {\n\n\t\t\t\tsocket.on(\"connect\", (socketd) => {\n\n\t\t\t\t\tif (socketd) {\n\t\t\t\t\t\tconst qs = require('querystring');\n\t\t\t\t\t\tconst urlParams = qs.parse(window.location.search);\n\t\t\t\t\t\tconst ordered = {};\n\t\t\t\t\t\tObject.keys(urlParams).sort().forEach((key) => {\n\t\t\t\t\t\t\tif (key.slice(0, 3) === 'vk_') {\n\t\t\t\t\t\t\t\tordered[key] = urlParams[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst userData = {\n\t\t\t\t\t\t\t'validate': ordered,\n\t\t\t\t\t\t\t'user_profile': {\n\t\t\t\t\t\t\t\t'id': data.id,\n\t\t\t\t\t\t\t\t'lastname': data.last_name,\n\t\t\t\t\t\t\t\t'firstname': data.first_name,\n\t\t\t\t\t\t\t\t'link': `https://vk.com/id${data.id}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (socketd.connect === 'connect') {\n\t\t\t\t\t\t\tsocket.emit(\"enter\", userData);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\n\n\t\t\t\t});\n\t\t\t\tsocket.on('disconnect', (socketd) => {\n\t\t\t\t\tif (socketd) {\n\t\t\t\t\t\tif (socketd.connect === \"disconnect\") {\n\t\t\t\t\t\t}\n\t\t\t\t\t}})\n\t\t\t\t\t\n\n\n\t\t\t})\n\t\tsocket.emit('statistic', { \"statistic\": \"all\" });\n\t\tsocket.emit('score', { \"score\": \"all\" });\n\t\tsocket.on(\"statistic\", (socketd) => { setYourStat(socketd.you_statistic); setBlueTeam(socketd.statistic.blue); setRedTeam(socketd.statistic.red) });\n\t\tsocket.on(\"color\", (socketd) => { console.log(\"color\", socketd) });\n\t\tsocket.on(\"score\", (socketd) => { console.log(socketd); if (socketd.red) { setRedScore(socketd.red) }; if (socketd.blue) { setBlueScore(socketd.blue) } });\n\t\tsocket.on(\"disconnect\", () => {\n\t\t\tconsole.log(\"user disconnected\");\n\n\t\t});\n\t\tsocket.on(\"click\", (socketd) => {\n\n\t\t\tif (socketd.click != 'select') {\n\n\t\t\t\tif (socketd.click === \"success\") {\n\t\t\t\t\tsocket.emit('score', { \"score\": \"all\" })\n\t\t\t\t}\n\t\t\t\tif (socketd.click === \"error\") {\n\t\t\t\t\tconsole.log('Ошибка');\n\t\t\t\t}\n\t\t\t\tif (socketd.click === \"flood\") {\n\t\t\t\t\tconsole.log('Не слишком быстро');\n\t\t\t\t}\n\t\t\t\tif (socketd.click === \"select\") {\n\t\t\t\t\tconsole.log('Выбор');\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsocket.emit('score', { \"score\": \"all\" });\n\t\t\t}\n\n\t\t});\n\n\n\t\t\n\n\n\n\t\twindow.addEventListener('popstate', () => goBack());\n\n\t}, []);\n\n\tconst [scheme, SetStateScheme] = useState('space_gray');\n\tconst [popoutSpin, setPopoutSpin] = useState(<ScreenSpinner />)\n\tconst [activePanel, setActivePanel] = useState(\"Loader\");\n\tconst [history, setHistory] = useState(['Home'])\n\n\tconst hasSeenIntro = (panel) => {\n\t\tsetActivePanel(panel)\n\t}\n\n\tconst goToPage = (name) => {\n\t\twindow.history.pushState({ panel: name }, name);\n\t\tsetActivePanel(name);\n\t\thistory.push(name);\n\t};\n\n\tconst goBack = () => {\n\t\tif (history.length === 1) {\n\t\t\tbridge.send(\"VKWebAppClose\", { \"status\": \"success\" });\n\t\t} else if (history.length > 1) {\n\t\t\thistory.pop()\n\t\t\tsetActivePanel(history[history.length - 1])\n\t\t}\n\t}\n\n\n\n\n\treturn (\n\t\t<ConfigProvider isWebView={true} scheme={scheme}>\n\t\t\t<View popout={popoutSpin} activePanel={activePanel} history={history} onSwipeBack={goBack}>\n\t\t\t\t<Loader id=\"Loader\" hasSeenIntro={hasSeenIntro} setPopoutSpin={setPopoutSpin} goToPage={goToPage} goBack={goBack} />\n\t\t\t\t<Intro id=\"Intro\" setPopoutSpin={setPopoutSpin} selectTeam={selectTeam} hasSeenIntro={hasSeenIntro} goToPage={goToPage} goBack={goBack} />\n\t\t\t\t<Home id=\"Home\" blueScore={blueScore} redScore={redScore} goToPage={goToPage} clickButton={clickButton} />\n\t\t\t\t<Rating id=\"Rating\" yourStat={yourStat} redTeam={redTeam} blueTeam={blueTeam} statistic={statistic} goToPage={goToPage} goBack={goBack} />\n\t\t\t\t<Info id=\"Info\" selectTeam={selectTeam} goToPage={goToPage} goBack={goBack} />\n\t\t\t\t<Finish id=\"Finish\" setPopoutSpin={setPopoutSpin} selectTeam={selectTeam} hasSeenIntro={hasSeenIntro} goToPage={goToPage} goBack={goBack} />\n\t\t\t</View>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\n\n\n\nbridge.send(\"VKWebAppInit\");\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => { }); //runtime download\n}\nbridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#029dfa\", 'navigation_bar_color': \"#464ab8\" });\nbridge.subscribe(({ detail: { type, data } }) => {\n  if (type === 'VKWebAppUpdateConfig') {\n  \n  }\n}, []);\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/icon.e4bd95a5.png\";","module.exports = __webpack_public_path__ + \"static/media/clicking.e36aaf81.png\";"],"sourceRoot":""}